# dictionary of questions:
#           keys are question numbers
#           values are tuples: level of difficulty, quest, correct answer, wrong answer 1, wrong answer 2, wrong answer 3.
#           index mapping:      0   difficulty level
#           index mapping:      1   question
#           index mapping:      2   correct answer
#           index mapping:      3   wrong answer
#           index mapping:      4   wrong answer
#           index mapping:      5   wrong answer

questions_dict = {
    1:(100, "in python, what is refered to as a Snake Case",
                            "using under score instead of spaces",
                                        "single line comments",
                                        "using correct indentations",
                                        "strings concatenation"),
    2:(100, "how can programmer exit out from an infinite loop in python",
                            "Ctrl + Z",
                                        "Ctrl + A",
                                        "Ctrl + Alt + Delete",
                                        "Space Bar"),
    3:(100, "what is the correct Math Order of Operations in Python",
                            "PEMDAS",
                                        "PAMDES",
                                        "PANDA",
                                        "PEDMAS"),
    4:(100, "what is a higher order function",
                            "a function that uses other function as an argument",
                                        "a python built in function",
                                        "a function that accepts parameters and return a value",
                                        "a function that can be used as an argument for another function"),
    5:(200, "which data type is not considered a composite data type",
                            "String",
                                        "Dictionary",
                                        "Set",
                                        "List"),
    6:(200, "what is the general standard for python indentation ",
                            "4 spaces",
                                        "tab spacing",
                                        "3 spaces",
                                        "any number of spaces"),
    7:(200, "which of the below statements is correct about scope ",
                            "a parent scope can not access vars and funct in child scope",
                                        "a parent scope can access vars and funct in child scope",
                                        "Global scope is created inside a function",
                                        "local scope is created at top level outside any function"),
    8:(200, "what is another name for lambda functions ",
                            "anonymous functions",
                                        "recursive functions",
                                        "callback functions",
                                        "built in functions"),
    9:(300, "whiting a recursion, what is a base case meaning ",
                            "base functions causes the recursion to end",
                                        "base functions evaluate the recursion for the next iteration",
                                        "base function is passed in to the recursion iterations",
                                        "base function is the maximum number a recursion can run"),
    10:(300, "how can a module access variables and functions from another module ",
                            "using the from / import syntax",
                                        "copying and pasting the desired module into our own file",
                                        "it is available as long as it is in same folder",
                                        "python automatically identify packages and modules to import"),
    11:(300, "how can a module access variables and functions from another module ",
                            "using the from / import syntax",
                                        "copying and pasting the desired module into our own file",
                                        "it is available as long as it is in same folder",
                                        "python automatically identify packages and modules to import"),
    12:(400, "which is not correct about Tuples ",
                            "Tuples are mutable",
                                        "Tuples are immutable lists",
                                        "Tuples are accessible by position index",
                                        "Tuples with single item must end with a comma"),
    13:(400, "which is not correct about Lists ",
                            "Lists are immutable",
                                        "Lists allow duplicates",
                                        "Lists are ordered",
                                        "Lists are mutable"),
    14:(400, "which is not correct about Sets ",
                            "empty set can be created with: set()",
                                        "Sets are unordered",
                                        "Sets do not allow duplicates",
                                        "Sets are indexed"),
                  }
